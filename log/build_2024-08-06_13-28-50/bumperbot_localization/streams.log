[0.016s] Invoking command in '/home/mhdns/bumperbot_ws/build/bumperbot_localization': /usr/bin/cmake --build /home/mhdns/bumperbot_ws/build/bumperbot_localization -- -j32 -l32
[0.038s] 
[0.038s] [0/4] Building CXX object CMakeFiles/kalman_filter.dir/src/kalman_filter.cpp.o[K
[0.044s] [0/4] cd /home/mhdns/bumperbot_ws/build/bumperbot_localization && /usr/bin/cmake -E copy_directory /home/mhdns/bumperbot_ws/src/bumperbot_localization/bumperbot_localization /home/mhdns/bumperbot_ws/build/bumperbot_localization/ament_cmake_python/bumperbot_localization/bumperbot_localization[K
[0.044s] [1/4] cd /home/mhdns/bumperbot_ws/build/bumperbot_localization && /usr/bin/cmake -E copy_directory /home/mhdns/bumperbot_ws/src/bumperbot_localization/bumperbot_localization /home/mhdns/bumperbot_ws/build/bumperbot_localization/ament_cmake_python/bumperbot_localization/bumperbot_localization[K
[0.198s] [1/4] cd /home/mhdns/bumperbot_ws/build/bumperbot_localization/ament_cmake_python/bumperbot_localization && /usr/bin/python3 setup.py egg_info[K
[0.198s] [2/4] cd /home/mhdns/bumperbot_ws/build/bumperbot_localization/ament_cmake_python/bumperbot_localization && /usr/bin/python3 setup.py egg_info[K
[0.198s] running egg_info
[0.198s] writing bumperbot_localization.egg-info/PKG-INFO
[0.198s] writing dependency_links to bumperbot_localization.egg-info/dependency_links.txt
[0.199s] writing top-level names to bumperbot_localization.egg-info/top_level.txt
[0.199s] reading manifest file 'bumperbot_localization.egg-info/SOURCES.txt'
[0.199s] writing manifest file 'bumperbot_localization.egg-info/SOURCES.txt'
[3.888s] 
[3.888s] [3/4] Building CXX object CMakeFiles/kalman_filter.dir/src/kalman_filter.cpp.o[K
[3.888s] [31mFAILED: [0mCMakeFiles/kalman_filter.dir/src/kalman_filter.cpp.o 
[3.888s] /usr/bin/c++ -DDEFAULT_RMW_IMPLEMENTATION=rmw_fastrtps_cpp -DRCUTILS_ENABLE_FAULT_INJECTION -isystem /opt/ros/humble/include/rclcpp -isystem /opt/ros/humble/include/sensor_msgs -isystem /opt/ros/humble/include/nav_msgs -isystem /opt/ros/humble/include/ament_index_cpp -isystem /opt/ros/humble/include/libstatistics_collector -isystem /opt/ros/humble/include/builtin_interfaces -isystem /opt/ros/humble/include/rosidl_runtime_c -isystem /opt/ros/humble/include/rcutils -isystem /opt/ros/humble/include/rosidl_typesupport_interface -isystem /opt/ros/humble/include/fastcdr -isystem /opt/ros/humble/include/rosidl_runtime_cpp -isystem /opt/ros/humble/include/rosidl_typesupport_fastrtps_cpp -isystem /opt/ros/humble/include/rmw -isystem /opt/ros/humble/include/rosidl_typesupport_fastrtps_c -isystem /opt/ros/humble/include/rosidl_typesupport_introspection_c -isystem /opt/ros/humble/include/rosidl_typesupport_introspection_cpp -isystem /opt/ros/humble/include/rcl -isystem /opt/ros/humble/include/rcl_interfaces -isystem /opt/ros/humble/include/rcl_logging_interface -isystem /opt/ros/humble/include/rcl_yaml_param_parser -isystem /opt/ros/humble/include/libyaml_vendor -isystem /opt/ros/humble/include/tracetools -isystem /opt/ros/humble/include/rcpputils -isystem /opt/ros/humble/include/statistics_msgs -isystem /opt/ros/humble/include/rosgraph_msgs -isystem /opt/ros/humble/include/rosidl_typesupport_cpp -isystem /opt/ros/humble/include/rosidl_typesupport_c -isystem /opt/ros/humble/include/geometry_msgs -isystem /opt/ros/humble/include/std_msgs -Wall -Wextra -Wpedantic -MD -MT CMakeFiles/kalman_filter.dir/src/kalman_filter.cpp.o -MF CMakeFiles/kalman_filter.dir/src/kalman_filter.cpp.o.d -o CMakeFiles/kalman_filter.dir/src/kalman_filter.cpp.o -c /home/mhdns/bumperbot_ws/src/bumperbot_localization/src/kalman_filter.cpp
[3.889s] /home/mhdns/bumperbot_ws/src/bumperbot_localization/src/kalman_filter.cpp: In function â€˜int main(int, char**)â€™:
[3.889s] /home/mhdns/bumperbot_ws/src/bumperbot_localization/src/kalman_filter.cpp:17:14: warning: unused parameter â€˜argcâ€™ [-Wunused-parameter]
[3.889s]    17 | int main(int argc, char **argv)
[3.889s]       |          ~~~~^~~~
[3.889s] /home/mhdns/bumperbot_ws/src/bumperbot_localization/src/kalman_filter.cpp:17:27: warning: unused parameter â€˜argvâ€™ [-Wunused-parameter]
[3.889s]    17 | int main(int argc, char **argv)
[3.889s]       |                    ~~~~~~~^~~~
[3.889s] In file included from /opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32,
[3.889s]                  from /opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29,
[3.890s]                  from /opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20,
[3.890s]                  from /opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25,
[3.890s]                  from /opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18,
[3.890s]                  from /opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20,
[3.890s]                  from /opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37,
[3.890s]                  from /opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25,
[3.890s]                  from /opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21,
[3.891s]                  from /opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155,
[3.891s]                  from /home/mhdns/bumperbot_ws/src/bumperbot_localization/src/../include/bumperbot_localization/kalman_filter.hpp:3,
[3.891s]                  from /home/mhdns/bumperbot_ws/src/bumperbot_localization/src/kalman_filter.cpp:1:
[3.891s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜rclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (KalmanFilter::*(KalmanFilter*, std::_Placeholder<1>))(const std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >&)>; MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>]â€™:
[3.891s] /opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:   required from â€˜rclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; CallbackT = std::_Bind<void (KalmanFilter::*(KalmanFilter*, std::_Placeholder<1>))(const std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Odometry_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = nav_msgs::msg::Odometry_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >]â€™
[3.891s] /opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:   required from â€˜std::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; CallbackT = std::_Bind<void (KalmanFilter::*(KalmanFilter*, std::_Placeholder<1>))(const std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Odometry_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = nav_msgs::msg::Odometry_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >]â€™
[3.891s] /opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:   required from â€˜std::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; CallbackT = std::_Bind<void (KalmanFilter::*(KalmanFilter*, std::_Placeholder<1>))(const std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Odometry_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >]â€™
[3.892s] /opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:   required from â€˜std::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; CallbackT = std::_Bind<void (KalmanFilter::*(KalmanFilter*, std::_Placeholder<1>))(const std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Odometry_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >]â€™
[3.892s] /home/mhdns/bumperbot_ws/src/bumperbot_localization/src/kalman_filter.cpp:12:61:   required from here
[3.892s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25: error: no match for â€˜operator=â€™ (operand types are â€˜rclcpp::detail::AnySubscriptionCallbackHelper<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void>, false>::variant_typeâ€™ {aka â€˜std::variant<std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&)>, std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >â€™} and â€˜rclcpp::detail::SubscriptionCallbackTypeHelper<nav_msgs::msg::Odometry_<std::allocator<void> >, std::_Bind<void (KalmanFilter::*(KalmanFilter*, std::_Placeholder<1>))(const std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >&)>, void>::callback_typeâ€™ {aka â€˜std::function<void(const std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >&)>â€™})
[3.892s]   394 |       callback_variant_ = static_cast<typename scbth::callback_type>(callback);
[3.892s]       |       ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[3.892s] In file included from /opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28,
[3.892s]                  from /opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24,
[3.893s]                  from /opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20,
[3.893s]                  from /opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25,
[3.893s]                  from /opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18,
[3.893s]                  from /opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20,
[3.893s]                  from /opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37,
[3.893s]                  from /opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25,
[3.893s]                  from /opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21,
[3.893s]                  from /opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155,
[3.893s]                  from /home/mhdns/bumperbot_ws/src/bumperbot_localization/src/../include/bumperbot_localization/kalman_filter.hpp:3,
[3.893s]                  from /home/mhdns/bumperbot_ws/src/bumperbot_localization/src/kalman_filter.cpp:1:
[3.893s] /usr/include/c++/11/variant:1461:9: note: candidate: â€˜template<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&)>, std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]â€™
[3.893s]  1461 |         operator=(_Tp&& __rhs)
[3.893s]       |         ^~~~~~~~
[3.893s] /usr/include/c++/11/variant:1461:9: note:   template argument deduction/substitution failed:
[3.893s] /usr/include/c++/11/variant: In substitution of â€˜template<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::function<void(const std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >&)>&&; <template-parameter-2-2> = void; _Types = {std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&)>, std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]â€™:
[3.894s] /usr/include/c++/11/variant:1457:14:   required by substitution of â€˜template<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&)>, std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&)>, std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&)>, std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&)>, std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&> std::variant<std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&)>, std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::operator=<_Tp>(_Tp&&) [with _Tp = std::function<void(const std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >&)>]â€™
[3.894s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:   required from â€˜rclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (KalmanFilter::*(KalmanFilter*, std::_Placeholder<1>))(const std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >&)>; MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>]â€™
[3.894s] /opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:   required from â€˜rclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; CallbackT = std::_Bind<void (KalmanFilter::*(KalmanFilter*, std::_Placeholder<1>))(const std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Odometry_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = nav_msgs::msg::Odometry_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >]â€™
[3.894s] /opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:   required from â€˜std::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; CallbackT = std::_Bind<void (KalmanFilter::*(KalmanFilter*, std::_Placeholder<1>))(const std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Odometry_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = nav_msgs::msg::Odometry_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >]â€™
[3.895s] /opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:   required from â€˜std::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; CallbackT = std::_Bind<void (KalmanFilter::*(KalmanFilter*, std::_Placeholder<1>))(const std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Odometry_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >]â€™
[3.895s] /opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:   required from â€˜std::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; CallbackT = std::_Bind<void (KalmanFilter::*(KalmanFilter*, std::_Placeholder<1>))(const std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Odometry_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >]â€™
[3.895s] /home/mhdns/bumperbot_ws/src/bumperbot_localization/src/kalman_filter.cpp:12:61:   required from here
[3.895s] /usr/include/c++/11/variant:1375:15: error: no type named â€˜typeâ€™ in â€˜struct std::enable_if<false, void>â€™
[3.895s]  1375 |         using __accepted_type = __to_type<__accepted_index<_Tp>>;
[3.895s]       |               ^~~~~~~~~~~~~~~
[3.895s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜rclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (KalmanFilter::*(KalmanFilter*, std::_Placeholder<1>))(const std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >&)>; MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>]â€™:
[3.895s] /opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:   required from â€˜rclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; CallbackT = std::_Bind<void (KalmanFilter::*(KalmanFilter*, std::_Placeholder<1>))(const std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Odometry_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = nav_msgs::msg::Odometry_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >]â€™
[3.895s] /opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:   required from â€˜std::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; CallbackT = std::_Bind<void (KalmanFilter::*(KalmanFilter*, std::_Placeholder<1>))(const std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Odometry_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = nav_msgs::msg::Odometry_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >]â€™
[3.896s] /opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:   required from â€˜std::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; CallbackT = std::_Bind<void (KalmanFilter::*(KalmanFilter*, std::_Placeholder<1>))(const std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Odometry_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >]â€™
[3.896s] /opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:   required from â€˜std::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; CallbackT = std::_Bind<void (KalmanFilter::*(KalmanFilter*, std::_Placeholder<1>))(const std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Odometry_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >]â€™
[3.896s] /home/mhdns/bumperbot_ws/src/bumperbot_localization/src/kalman_filter.cpp:12:61:   required from here
[3.896s] /usr/include/c++/11/variant:1398:16: note: candidate: â€˜std::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&)>, std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]â€™
[3.896s]  1398 |       variant& operator=(const variant&) = default;
[3.896s]       |                ^~~~~~~~
[3.896s] /usr/include/c++/11/variant:1398:26: note:   no known conversion for argument 1 from â€˜rclcpp::detail::SubscriptionCallbackTypeHelper<nav_msgs::msg::Odometry_<std::allocator<void> >, std::_Bind<void (KalmanFilter::*(KalmanFilter*, std::_Placeholder<1>))(const std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >&)>, void>::callback_typeâ€™ {aka â€˜std::function<void(const std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >&)>â€™} to â€˜const std::variant<std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&)>, std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&â€™
[3.896s]  1398 |       variant& operator=(const variant&) = default;
[3.896s]       |                          ^~~~~~~~~~~~~~
[3.896s] /usr/include/c++/11/variant:1399:16: note: candidate: â€˜std::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&)>, std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]â€™
[3.896s]  1399 |       variant& operator=(variant&&) = default;
[3.896s]       |                ^~~~~~~~
[3.896s] /usr/include/c++/11/variant:1399:26: note:   no known conversion for argument 1 from â€˜rclcpp::detail::SubscriptionCallbackTypeHelper<nav_msgs::msg::Odometry_<std::allocator<void> >, std::_Bind<void (KalmanFilter::*(KalmanFilter*, std::_Placeholder<1>))(const std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >&)>, void>::callback_typeâ€™ {aka â€˜std::function<void(const std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >&)>â€™} to â€˜std::variant<std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&)>, std::function<void(const nav_msgs::msg::Odometry_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<nav_msgs::msg::Odometry_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Odometry_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<nav_msgs::msg::Odometry_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&&â€™
[3.896s]  1399 |       variant& operator=(variant&&) = default;
[3.896s]       |                          ^~~~~~~~~
[3.896s] In file included from /opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32,
[3.896s]                  from /opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29,
[3.896s]                  from /opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20,
[3.896s]                  from /opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25,
[3.896s]                  from /opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18,
[3.896s]                  from /opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20,
[3.896s]                  from /opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37,
[3.896s]                  from /opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25,
[3.897s]                  from /opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21,
[3.897s]                  from /opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155,
[3.897s]                  from /home/mhdns/bumperbot_ws/src/bumperbot_localization/src/../include/bumperbot_localization/kalman_filter.hpp:3,
[3.897s]                  from /home/mhdns/bumperbot_ws/src/bumperbot_localization/src/kalman_filter.cpp:1:
[3.897s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜rclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (KalmanFilter::*(KalmanFilter*, std::_Placeholder<1>))(const std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >&)>; MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>]â€™:
[3.897s] /opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:   required from â€˜rclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; CallbackT = std::_Bind<void (KalmanFilter::*(KalmanFilter*, std::_Placeholder<1>))(const std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Imu_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = sensor_msgs::msg::Imu_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >]â€™
[3.897s] /opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:   required from â€˜std::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; CallbackT = std::_Bind<void (KalmanFilter::*(KalmanFilter*, std::_Placeholder<1>))(const std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Imu_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = sensor_msgs::msg::Imu_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >]â€™
[3.897s] /opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:   required from â€˜std::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; CallbackT = std::_Bind<void (KalmanFilter::*(KalmanFilter*, std::_Placeholder<1>))(const std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Imu_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >]â€™
[3.897s] /opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:   required from â€˜std::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; CallbackT = std::_Bind<void (KalmanFilter::*(KalmanFilter*, std::_Placeholder<1>))(const std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Imu_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >]â€™
[3.897s] /home/mhdns/bumperbot_ws/src/bumperbot_localization/src/kalman_filter.cpp:13:58:   required from here
[3.897s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25: error: no match for â€˜operator=â€™ (operand types are â€˜rclcpp::detail::AnySubscriptionCallbackHelper<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void>, false>::variant_typeâ€™ {aka â€˜std::variant<std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&)>, std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >â€™} and â€˜rclcpp::detail::SubscriptionCallbackTypeHelper<sensor_msgs::msg::Imu_<std::allocator<void> >, std::_Bind<void (KalmanFilter::*(KalmanFilter*, std::_Placeholder<1>))(const std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >&)>, void>::callback_typeâ€™ {aka â€˜std::function<void(const std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >&)>â€™})
[3.897s]   394 |       callback_variant_ = static_cast<typename scbth::callback_type>(callback);
[3.897s]       |       ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[3.897s] In file included from /opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28,
[3.897s]                  from /opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24,
[3.897s]                  from /opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20,
[3.897s]                  from /opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25,
[3.897s]                  from /opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18,
[3.897s]                  from /opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20,
[3.897s]                  from /opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37,
[3.897s]                  from /opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25,
[3.897s]                  from /opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21,
[3.897s]                  from /opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155,
[3.897s]                  from /home/mhdns/bumperbot_ws/src/bumperbot_localization/src/../include/bumperbot_localization/kalman_filter.hpp:3,
[3.897s]                  from /home/mhdns/bumperbot_ws/src/bumperbot_localization/src/kalman_filter.cpp:1:
[3.898s] /usr/include/c++/11/variant:1461:9: note: candidate: â€˜template<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&)>, std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]â€™
[3.898s]  1461 |         operator=(_Tp&& __rhs)
[3.898s]       |         ^~~~~~~~
[3.898s] /usr/include/c++/11/variant:1461:9: note:   template argument deduction/substitution failed:
[3.898s] /usr/include/c++/11/variant: In substitution of â€˜template<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::function<void(const std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >&)>&&; <template-parameter-2-2> = void; _Types = {std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&)>, std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]â€™:
[3.898s] /usr/include/c++/11/variant:1457:14:   required by substitution of â€˜template<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&)>, std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&)>, std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&)>, std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&)>, std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&> std::variant<std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&)>, std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::operator=<_Tp>(_Tp&&) [with _Tp = std::function<void(const std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >&)>]â€™
[3.898s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:   required from â€˜rclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (KalmanFilter::*(KalmanFilter*, std::_Placeholder<1>))(const std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >&)>; MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>]â€™
[3.898s] /opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:   required from â€˜rclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; CallbackT = std::_Bind<void (KalmanFilter::*(KalmanFilter*, std::_Placeholder<1>))(const std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Imu_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = sensor_msgs::msg::Imu_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >]â€™
[3.898s] /opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:   required from â€˜std::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; CallbackT = std::_Bind<void (KalmanFilter::*(KalmanFilter*, std::_Placeholder<1>))(const std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Imu_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = sensor_msgs::msg::Imu_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >]â€™
[3.898s] /opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:   required from â€˜std::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; CallbackT = std::_Bind<void (KalmanFilter::*(KalmanFilter*, std::_Placeholder<1>))(const std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Imu_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >]â€™
[3.898s] /opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:   required from â€˜std::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; CallbackT = std::_Bind<void (KalmanFilter::*(KalmanFilter*, std::_Placeholder<1>))(const std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Imu_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >]â€™
[3.898s] /home/mhdns/bumperbot_ws/src/bumperbot_localization/src/kalman_filter.cpp:13:58:   required from here
[3.898s] /usr/include/c++/11/variant:1375:15: error: no type named â€˜typeâ€™ in â€˜struct std::enable_if<false, void>â€™
[3.898s]  1375 |         using __accepted_type = __to_type<__accepted_index<_Tp>>;
[3.898s]       |               ^~~~~~~~~~~~~~~
[3.898s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜rclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (KalmanFilter::*(KalmanFilter*, std::_Placeholder<1>))(const std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >&)>; MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>]â€™:
[3.898s] /opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:   required from â€˜rclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; CallbackT = std::_Bind<void (KalmanFilter::*(KalmanFilter*, std::_Placeholder<1>))(const std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Imu_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = sensor_msgs::msg::Imu_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >]â€™
[3.898s] /opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:   required from â€˜std::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; CallbackT = std::_Bind<void (KalmanFilter::*(KalmanFilter*, std::_Placeholder<1>))(const std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Imu_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = sensor_msgs::msg::Imu_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >]â€™
[3.898s] /opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:   required from â€˜std::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; CallbackT = std::_Bind<void (KalmanFilter::*(KalmanFilter*, std::_Placeholder<1>))(const std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Imu_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >]â€™
[3.898s] /opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:   required from â€˜std::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; CallbackT = std::_Bind<void (KalmanFilter::*(KalmanFilter*, std::_Placeholder<1>))(const std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Imu_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >]â€™
[3.899s] /home/mhdns/bumperbot_ws/src/bumperbot_localization/src/kalman_filter.cpp:13:58:   required from here
[3.899s] /usr/include/c++/11/variant:1398:16: note: candidate: â€˜std::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&)>, std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]â€™
[3.899s]  1398 |       variant& operator=(const variant&) = default;
[3.899s]       |                ^~~~~~~~
[3.899s] /usr/include/c++/11/variant:1398:26: note:   no known conversion for argument 1 from â€˜rclcpp::detail::SubscriptionCallbackTypeHelper<sensor_msgs::msg::Imu_<std::allocator<void> >, std::_Bind<void (KalmanFilter::*(KalmanFilter*, std::_Placeholder<1>))(const std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >&)>, void>::callback_typeâ€™ {aka â€˜std::function<void(const std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >&)>â€™} to â€˜const std::variant<std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&)>, std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&â€™
[3.899s]  1398 |       variant& operator=(const variant&) = default;
[3.899s]       |                          ^~~~~~~~~~~~~~
[3.899s] /usr/include/c++/11/variant:1399:16: note: candidate: â€˜std::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&)>, std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]â€™
[3.899s]  1399 |       variant& operator=(variant&&) = default;
[3.899s]       |                ^~~~~~~~
[3.899s] /usr/include/c++/11/variant:1399:26: note:   no known conversion for argument 1 from â€˜rclcpp::detail::SubscriptionCallbackTypeHelper<sensor_msgs::msg::Imu_<std::allocator<void> >, std::_Bind<void (KalmanFilter::*(KalmanFilter*, std::_Placeholder<1>))(const std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >&)>, void>::callback_typeâ€™ {aka â€˜std::function<void(const std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >&)>â€™} to â€˜std::variant<std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&)>, std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&&â€™
[3.899s]  1399 |       variant& operator=(variant&&) = default;
[3.899s]       |                          ^~~~~~~~~
[3.899s] ninja: build stopped: subcommand failed.
[3.899s] Invoked command in '/home/mhdns/bumperbot_ws/build/bumperbot_localization' returned '1': /usr/bin/cmake --build /home/mhdns/bumperbot_ws/build/bumperbot_localization -- -j32 -l32
